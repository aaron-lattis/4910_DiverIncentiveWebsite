# Generated by Django 3.0.5 on 2021-02-10 00:37

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CatalogItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=25, validators=[django.core.validators.MinLengthValidator(1)], verbose_name='Item Name')),
                ('item_description', models.CharField(max_length=256, validators=[django.core.validators.MinLengthValidator(1)], verbose_name='First Name')),
                ('retail_price', models.FloatField(null=True, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Retail Price (MSRP)')),
                ('is_available', models.BooleanField(default=False, verbose_name='Item is Available From Retail')),
                ('api_item_Id', models.CharField(max_length=256, validators=[django.core.validators.MinLengthValidator(1)], verbose_name='API Link/Identifier')),
            ],
        ),
        migrations.CreateModel(
            name='SponsorCompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=25, validators=[django.core.validators.MinLengthValidator(1)], verbose_name='Company Name')),
                ('company_phone_number', models.IntegerField(validators=[django.core.validators.MinValueValidator(1000000000), django.core.validators.MaxValueValidator(99999999999999)], verbose_name='Phone Number')),
                ('company_street_address', models.CharField(max_length=32, validators=[django.core.validators.MinLengthValidator(1)], verbose_name='Company Street Address')),
                ('company_city', models.CharField(max_length=25, validators=[django.core.validators.MinLengthValidator(1)], verbose_name='Company City')),
                ('company_state', models.CharField(max_length=25, validators=[django.core.validators.MinLengthValidator(1)], verbose_name='Company State')),
                ('company_zipcode', models.IntegerField(validators=[django.core.validators.MinValueValidator(500), django.core.validators.MaxValueValidator(99999)], verbose_name='Zip Code')),
            ],
        ),
        migrations.AddField(
            model_name='userinformation',
            name='approving_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.UserInformation'),
        ),
        migrations.AddField(
            model_name='userinformation',
            name='is_active_account',
            field=models.BooleanField(default=True, verbose_name='If User Has Account Enabled'),
        ),
        migrations.AddField(
            model_name='userinformation',
            name='is_email_verified',
            field=models.BooleanField(default=False, verbose_name='If User Verified Email'),
        ),
        migrations.AddField(
            model_name='userinformation',
            name='last_login',
            field=models.DateTimeField(default='1969-12-31 11:59', verbose_name='Last User Login'),
        ),
        migrations.AddField(
            model_name='userinformation',
            name='last_name',
            field=models.CharField(default='N/A', max_length=25, validators=[django.core.validators.MinLengthValidator(1)], verbose_name='Last Name'),
        ),
        migrations.AddField(
            model_name='userinformation',
            name='phone_number',
            field=models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1000000000), django.core.validators.MaxValueValidator(99999999999999)], verbose_name='Phone Number'),
        ),
        migrations.AddField(
            model_name='userinformation',
            name='role_name',
            field=models.CharField(choices=[('driver', 'Driver'), ('sponsor', 'Sponsor'), ('admin', 'Admin')], default='driver', max_length=25, validators=[django.core.validators.MinLengthValidator(1)], verbose_name='Role Name'),
        ),
        migrations.AlterField(
            model_name='userinformation',
            name='first_name',
            field=models.CharField(default='N/A', max_length=25, validators=[django.core.validators.MinLengthValidator(1)], verbose_name='First Name'),
        ),
        migrations.CreateModel(
            name='SponsorCatalogItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point_value', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Driver Point Value')),
                ('is_available_to_drivers', models.BooleanField(default=False, verbose_name='Is Item Available For Driver Redemption')),
                ('catalog_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.CatalogItem')),
                ('sponsor_company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.SponsorCompany')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_status', models.CharField(choices=[('inCart', 'In-Cart'), ('ordered', 'Ordered'), ('shipping', 'Shipping'), ('fulfilled', 'Fulfilled'), ('canceled', 'Canceled'), ('returnRequest', 'Return In-Progress'), ('returned', 'Returned')], max_length=25, verbose_name='Order Status')),
                ('last_status_change', models.DateTimeField(verbose_name='Last DateTime of OrderStatus Update')),
                ('retail_at_order', models.FloatField(null=True, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Retail Price (MSRP) at Order Time')),
                ('points_at_order', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Driver Point Cost at Order Time')),
                ('ordering_driver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.UserInformation')),
                ('sponsor_catalog_item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.SponsorCatalogItem')),
            ],
        ),
        migrations.CreateModel(
            name='CatalogItemImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_link', models.URLField(verbose_name='Static Image Link')),
                ('catalog_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.CatalogItem')),
            ],
        ),
        migrations.CreateModel(
            name='AuditPointChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_time', models.DateTimeField(verbose_name='DateTime of Point Change')),
                ('point_change', models.IntegerField(verbose_name='Point Change for Driver')),
                ('change_reason', models.CharField(max_length=128, verbose_name='Point Change Reason')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.UserInformation')),
            ],
        ),
        migrations.CreateModel(
            name='AuditLoginAttempt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attempt_time', models.DateTimeField(verbose_name='DateTime of login attempt')),
                ('is_successful', models.NullBooleanField(verbose_name='Whether a login attempt is successful')),
                ('login_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.UserInformation')),
            ],
        ),
        migrations.CreateModel(
            name='AuditApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_time', models.DateTimeField(verbose_name='DateTime of Application Submission')),
                ('apply_status', models.CharField(choices=[('pending', 'Pending Approval'), ('accepted', 'Accepted'), ('rejected', 'Rejected')], max_length=25, verbose_name='Application Status')),
                ('reject_reason', models.CharField(blank=True, max_length=128, verbose_name='Rejection Reason')),
                ('driver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auditapplication_driver', to='accounts.UserInformation')),
                ('sponsor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auditapplication_sponsor', to='accounts.UserInformation')),
                ('sponsor_company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.SponsorCompany')),
            ],
        ),
        migrations.AddField(
            model_name='userinformation',
            name='sponsor_company',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.SponsorCompany'),
        ),
    ]
