# Generated by Django 3.1.2 on 2021-03-04 22:07

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AuditApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_time', models.DateTimeField(verbose_name='DateTime of Application Submission')),
                ('apply_status', models.CharField(choices=[('pending', 'Pending Approval'), ('accepted', 'Accepted'), ('rejected', 'Rejected')], max_length=25, verbose_name='Application Status')),
                ('reject_reason', models.CharField(blank=True, max_length=128, verbose_name='Rejection Reason')),
            ],
        ),
        migrations.CreateModel(
            name='AuditLoginAttempt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attempt_time', models.DateTimeField(verbose_name='DateTime of login attempt')),
                ('is_successful', models.BooleanField(null=True, verbose_name='Whether a login attempt is successful')),
            ],
        ),
        migrations.CreateModel(
            name='AuditPointChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_time', models.DateTimeField(default=datetime.datetime.utcnow, verbose_name='DateTime of Point Change')),
                ('point_change', models.IntegerField(verbose_name='Point Change for Driver')),
                ('change_reason', models.CharField(max_length=128, verbose_name='Point Change Reason')),
            ],
        ),
        migrations.CreateModel(
            name='SponsorCompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=25, validators=[django.core.validators.MinLengthValidator(1)], verbose_name='Company Name')),
                ('company_phone_number', models.IntegerField(validators=[django.core.validators.MinValueValidator(1000000000), django.core.validators.MaxValueValidator(99999999999999)], verbose_name='Phone Number')),
                ('company_street_address', models.CharField(max_length=32, validators=[django.core.validators.MinLengthValidator(1)], verbose_name='Company Street Address')),
                ('company_city', models.CharField(max_length=25, validators=[django.core.validators.MinLengthValidator(1)], verbose_name='Company City')),
                ('company_state', models.CharField(max_length=25, validators=[django.core.validators.MinLengthValidator(1)], verbose_name='Company State')),
                ('company_zipcode', models.IntegerField(validators=[django.core.validators.MinValueValidator(500), django.core.validators.MaxValueValidator(99999)], verbose_name='Zip Code')),
                ('company_point_ratio', models.IntegerField(default=1, verbose_name='US Cents to Catalog Points Ratio')),
                ('company_about_info', models.CharField(default='Enter about me info here', max_length=1000000, verbose_name='About sponsor')),
            ],
        ),
        migrations.CreateModel(
            name='UserInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(choices=[('driver', 'Driver'), ('sponsor', 'Sponsor'), ('admin', 'Admin')], default='driver', max_length=25, validators=[django.core.validators.MinLengthValidator(1)], verbose_name='Role Name')),
                ('first_name', models.CharField(default='N/A', max_length=25, validators=[django.core.validators.MinLengthValidator(1)], verbose_name='First Name')),
                ('last_name', models.CharField(default='N/A', max_length=25, validators=[django.core.validators.MinLengthValidator(1)], verbose_name='Last Name')),
                ('phone_number', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1000000000), django.core.validators.MaxValueValidator(99999999999999)], verbose_name='Phone Number')),
                ('last_login', models.DateTimeField(auto_now_add=True, verbose_name='Last User Login')),
                ('is_email_verified', models.BooleanField(default=False, verbose_name='If User Verified Email')),
                ('is_active_account', models.BooleanField(default=True, verbose_name='If User Has Account Enabled')),
                ('points', models.IntegerField(default=0, null=True, verbose_name='Points')),
                ('address', models.CharField(blank=True, default='N/A', max_length=100, verbose_name='Address')),
                ('license_number', models.CharField(blank=True, default='N/A', max_length=20, verbose_name='License')),
                ('state', models.CharField(blank=True, choices=[('AL', 'Alabama'), ('AK', 'Alaska'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DE', 'Delaware'), ('DC', 'District of Columbia'), ('FL', 'Florida'), ('GA', 'Georgia'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming')], max_length=20, verbose_name='State')),
                ('approving_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.userinformation')),
                ('sponsor_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.sponsorcompany')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_status', models.CharField(choices=[('inCart', 'In-Cart'), ('ordered', 'Ordered'), ('shipping', 'Shipping'), ('fulfilled', 'Fulfilled'), ('canceled', 'Canceled'), ('returnRequest', 'Return In-Progress'), ('returned', 'Returned')], max_length=25, verbose_name='Order Status')),
                ('last_status_change', models.DateTimeField(default=datetime.datetime.utcnow, verbose_name='Last DateTime of OrderStatus Update')),
                ('retail_at_order', models.FloatField(null=True, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Retail Price (MSRP) at Order Time')),
                ('points_at_order', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Driver Point Cost at Order Time')),
                ('ordering_driver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.userinformation')),
            ],
        ),
    ]
